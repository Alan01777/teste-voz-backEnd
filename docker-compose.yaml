volumes:
  postgres-data:
    driver: local

networks:
  voz:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24
    driver_opts:
      com.docker.network.bridge.name: voz

services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine-perl
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./:/var/www/app
      - ./certbot/www:/var/www/certbot/
      - ./certbot/conf/:/etc/nginx/ssl/
    networks:
      voz:
        ipv4_address: 10.0.0.100
    depends_on:
      - app

  app:
    container_name: app
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./:/var/www/app
    networks:
      voz:
        ipv4_address: 10.0.0.101
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    restart: unless-stopped
    image: postgres:15.10-alpine3.20
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      voz:
        ipv4_address: 10.0.0.110
    volumes:
      - postgres-data:/var/lib/postgresql/data

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/
